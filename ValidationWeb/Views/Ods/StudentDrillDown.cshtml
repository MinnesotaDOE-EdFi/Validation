@model StudentDrillDownViewModel

<div class="row tbmargin10">
    @if (Model.IsStateMode)
    {
        <div class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for All Minnesota Districts</div>
    }
    else
    {
        if (Model.OrgType == OrgType.School)
        {
            <div class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for @Model.SchoolName (@Model.SchoolId.ToString())</div>
        }
        else
        {
            <div class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for @Model.EdOrgName (@Model.EdOrgId.ToString())</div>
        }
    }
</div>
<div id="requestedReportContent" class="row">
    @Html.Partial("StudentDrillDownTable", Model)
</div>
<div id="notes" class="row">
    <div class="vp-body-header">&nbsp;</div>
</div>

@section scripts {
    <script type="text/javascript">
        $(function() {

            $('div.dataTables_scrollBody').css('min-height', '350px');

            var dataTable = $('#reportsTable').DataTable({
                paging: true,
                info: false,
                scrollX: false,
                scrollY: '350px',
                scrollCollapse: true,
                deferRender: true,
                searching: false,
                serverSide: true,
                processing: true,
                scroller: {
                    loadingIndicator: true
                },
                fnInitComplete: function() {
                    $('div.dataTables_scrollBody').css('min-height', 0);
                },
                ajax: {
                    url:
                        "@Html.Raw(Url.Action(
                             "GetStudentDrilldownData",
                             new
                             {
                                 orgType = Model.OrgType,
                                 schoolId = Model.SchoolId,
                                 edOrgId = Model.EdOrgId,
                                 drillDownColumnIndex = Model.DrillDownColumnIndex,
                                 fourDigitSchoolYear = Model.FourDigitSchoolYear,
                                 reportType = Model.ReportType
                             }))"
                },
                columns: [
                    {
                        title: 'ID',
                        name: 'studentId',
                        data: 'studentId',
                    },
                    {
                        title: 'Student Name',
                        name: 'studentName',
                        width: '200px',
                        data: function(row, type, set) {
                            return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName
                        },
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'School ID',
                        name: 'schoolId',
                        data: 'schoolId',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                if (data != null) {
                                    return data;
                                } else {
                                    return "Unknown";
                                }
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'School Name',
                        name: 'schoolName',
                        data: 'schoolName',
                        width: '300px',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                if (data != null && data.length > 0) {
                                    return data;
                                } else {
                                    return "Unknown";
                                }
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Enrolled Date',
                        name: 'enrolledDate',
                        data: 'enrolledDate',
                        render: function (data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Withdraw Date',
                        name: 'withdrawDate',
                        data: 'withdrawDate',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Grade',
                        name: 'grade',
                        data: 'grade',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                if (data != null) {
                                    return data;
                                } else {
                                    return "Unknown";
                                }
                            } else {
                                return data;
                            }
                        }
                    }
                ]
            });

            $(dataTable.table().header()).addClass('table-primary');
        });
    </script>
}
