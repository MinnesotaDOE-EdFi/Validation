@model StudentDrillDownViewModel

<div class="row tbmargin10">
    @if (Model.IsStateMode)
    {
        <div class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for All Minnesota Districts</div>
    }
    else
    {
        <div class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for @Model.EdOrgName (@Model.EdOrgId.ToString())</div>
    }
</div>
<div id="requestedReportContent" class="row">
    @Html.Partial("StudentDrillDownTable", Model)

    @*<table class="table table-sm table-responsive-md table-bordered" id="reportsTable">
            <thead>
                <tr class="table-primary">
                    <th>ID</th>
                    <th>Student Name</th>
                    <th class="d-none">District Id</th>
                    <th class="d-none">District Name</th>
                    <th>School Id</th>
                    <th>School Name</th>
                    <th>Enrolled Date</th>
                    <th>Withdraw Date</th>
                    <th>Grade</th>
                    <th class="d-none">Special Ed Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var result in Model.Results)
                {
                    <tr>
                        <td>@(result.StudentId)</td>
                        <td>@(result.StudentLastName ?? string.Empty), @(result.StudentMiddleName ?? string.Empty) @(result.StudentFirstName ?? string.Empty)</td>
                        <td class="d-none">@(result.DistrictId.ToString() ?? "Unknown")</td>
                        <td class="d-none">@(result.DistrictName ?? "Unknown")</td>
                        <td>@(result.SchoolId.ToString() ?? "Unknown")</td>
                        <td>@(result.SchoolName ?? "Unknown")</td>
                        <td>@(result.EnrolledDate?.ToString("MM/dd/yyyy") ?? "Unknown")</td>
                        <td>@(result.WithdrawDate?.ToString("MM/dd/yyyy") ?? "Unknown")</td>
                        <td>@(result.Grade ?? "Unknown")</td>
                        <td class="d-none">@(result.SpecialEdStatus ?? "Unknown")</td>
                    </tr>
                }
            </tbody>
        </table>
        @if (Model.Results.Count == 0)
        {
            <div class="vp-body-header col-8 justify-content-start align-self-center">No records were found.</div>
        }*@
</div>

@section scripts {
    <script type="text/javascript">
        $(function() {

            $('div.dataTables_scrollBody').css('min-height', '350px');

            var dataTable = $('#reportsTable').DataTable({
                paging: true,
                info: false,
                scrollX: false,
                scrollY: '350px',
                scrollCollapse: true,
                deferRender: true,
                searching: false,
                serverSide: true,
                processing: true,
                scroller: {
                    loadingIndicator: true
                },
                fnInitComplete: function() {
                    $('div.dataTables_scrollBody').css('min-height', 0);
                },
                ajax: {
                    url:
                        "@Html.Raw(Url.Action("GetStudentDrilldownData", new { orgType = Model.OrgType, schoolId = Model.SchoolId, edOrgId = Model.EdOrgId, drillDownColumnIndex = Model.DrillDownColumnIndex, fourDigitSchoolYear = Model.FourDigitSchoolYear }))"
                },
                columns: [
                    {
                        title: 'ID',
                        name: 'studentId',
                        data: 'studentId',
                    },
                    {
                        title: 'Student Name',
                        name: 'studentName',
                        width: '200px',
                        data: function(row, type, set) {
                            return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName
                        },
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'School ID',
                        name: 'schoolId',
                        data: 'schoolId',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                if (data != null) {
                                    return data;
                                } else {
                                    return "Unknown";
                                }
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'School Name',
                        name: 'schoolName',
                        data: 'schoolName',
                        width: '300px',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                if (data != null && data.length > 0) {
                                    return data;
                                } else {
                                    return "Unknown";
                                }
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Enrolled Date',
                        name: 'enrolledDate',
                        data: 'enrolledDate',
                        render: function (data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Withdraw Date',
                        name: 'withdrawDate',
                        data: 'withdrawDate',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Grade',
                        name: 'grade',
                        data: 'grade',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                if (data != null) {
                                    return data;
                                } else {
                                    return "Unknown";
                                }
                            } else {
                                return data;
                            }
                        }
                    }
                ]
            });

            $(dataTable.table().header()).addClass('table-primary');
        });
    </script>
}
