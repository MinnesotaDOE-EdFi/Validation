@model OdsChangeOfEnrollmentReportViewModel

<div class="row tbmargin10" id="pagetop">
    <div class="vp-body-header justify-content-start align-self-center">Changes of Enrollment for District @Model.EdOrgName (@Model.EdOrgId.ToString())</div>
</div>

<div class="row">
    <div class="col-md-12 nopadding">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" data-toggle="tab" href="#enrollmentsPane">Enrolling</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#withdrawalsPane">Withdrawing</a>
            </li>
        </ul>
    </div>
</div>

<div class="row tbmargin10">
    <div class="col-md-2 text-right"><span class="align-middle">Changes within the last:</span></div>
    <div class="col-md-7">
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="date-filter" id="30days" value="30-days" autocomplete="off" checked />
            <label class="form-check-label" for="30days">30 days</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="date-filter" id="90days" value="90-days" autocomplete="off" />
            <label class="form-check-label" for="90days">90 days</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="date-filter" id="1year" value="1-year" autocomplete="off" />
            <label class="form-check-label" for="1year">1 year</label>
        </div>
    </div>
    <div class="col-md-3 text-right">
        <span class="align-middle"><a href="#notes">View Report notes</a></span>
    </div>
</div>

<!-- Tab panes -->
<div class="tab-content">
    <div class="tab-pane row fade show active" id="enrollmentsPane">
        <div id="requestedReportContent">
            <div class="row">
                <div class="col-md-12 nopadding">
                    <table class="table nowrap" id="reportsTable1" style="table-layout: fixed; width: 98% !important;"></table>
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane row fade" id="withdrawalsPane">
        <div id="requestedReportContent2">
            <div class="row">
                <div class="col-md-12 nopadding">
                    <table class="table nowrap" id="reportsTable2" style="table-layout: fixed; width: 98% !important;"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="notes" class="row">
    <div class="vp-body-header">Notes:</div>
</div>
<div class="row">(1) Enrolling students are those who enrolled in a district school in the past 30 days and had enrolled in some other school in the state prior to 30 days ago.</div>
<div class="row">(2) Withdrawing students are those that withdrew in the past thirty days and subsequently enrolled elsewhere in the state.</div>
<div class="row tbmargin10">
    <a href="#pagetop">Back to Top</a>
</div>

@Html.Partial("Partials/RequestRecordsModal")

@section scripts {
    <script>
        $(function() {
            $('div.dataTables_scrollBody').css('min-height', '350px');

            // notify tables within tab panes that it's time to refresh/draw
            $('a[data-toggle="tab"]').on('shown.bs.tab',
                function(e) {
                    var tables = $.fn.dataTable.tables({ visible: true, api: true });
                    tables.columns.adjust();
                    tables.scroller.measure();
                });

            var dataTable = $('#reportsTable1').DataTable({
                paging: true,
                info: false,
                scrollX: false,
                scrollY: '350px',
                scrollCollapse: true,
                deferRender: true,
                searching: false,
                serverSide: true,
                processing: true,
                language: {
                    loadingRecords: 'Loading...',
                    processing: "Loading..."
                },
                scroller: {
                    loadingIndicator: true
                },
                fnInitComplete: function() {
                    $('div.dataTables_scrollBody').css('min-height', 0);
                },
                ajax: {
                    data: function(data) {
                        var checkedValue = $('input[name=date-filter]:checked');
                        if (checkedValue.length !== 1) {
                            debugger;
                        }

                        data.columns[5].search.value = checkedValue.attr('id');;
                    },
                    url: "@Html.Raw(Url.Action("GetChangeOfEnrollmentReportData", new
                                                                                  {
                                                                                      edOrgId = Model.EdOrgId,
                                                                                      fourDigitSchoolYear = Model.FourDigitSchoolYear,
                                                                                      isCurrentDistrict = true
                                                                                  }))"
                },
                columns: [
                    {
                        title: 'Student Name',
                        name: 'studentName',
                        width: '200px',
                        data: function(row, type, set) {
                            return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                        },
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'State Reporting Number',
                        name: 'studentID',
                        data: 'studentID'
                    },
                    {
                        title: 'Birthdate',
                        name: 'studentBirthDate',
                        data: 'studentBirthDate',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Grade',
                        name: 'currentGrade',
                        data: 'currentGrade'
                    },
                    {
                        title: 'District ID',
                        name: 'currentDistEdOrgId',
                        data: 'currentDistEdOrgId'
                    },
                    {
                        title: 'Entry Date',
                        name: 'currentEdOrgEnrollmentDate',
                        data: 'currentEdOrgEnrollmentDate',
                        searchable: true,
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Exit Withdraw Date',
                        name: 'currentEdOrgExitDate',
                        data: 'currentEdOrgExitDate',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Records Requested',
                        orderable: false,
                        data: 'null',
                        render: function(data, type, row) {
                            return '<button class="btn btn-sm prime-blue white-heavy-text" data-toggle="modal" data-target="#request-records-modal">Request Records</button>';
                        }


                    }
                ]
            });

            $(dataTable.table().header()).addClass('table-primary');

            dataTable = $('#reportsTable2').DataTable({
                paging: true,
                info: false,
                scrollX: false,
                scrollY: '350px',
                scrollCollapse: true,
                deferRender: true,
                searching: false,
                serverSide: true,
                processing: true,
                language: {
                    loadingRecords: 'Loading...',
                    processing: "Loading..."
                },
                scroller: {
                    loadingIndicator: true
                },
                fnInitComplete: function() {
                    $('div.dataTables_scrollBody').css('min-height', 0);
                },
                ajax: {
                    data: function(data) {
                        var checkedValue = $('input[name=date-filter]:checked');
                        if (checkedValue.length !== 1) {
                            debugger;
                        }

                        data.columns[8].search.value = checkedValue.attr('id');;
                    },
                    url: "@Html.Raw(Url.Action("GetChangeOfEnrollmentReportData", new
                                                                                  {
                                                                                      edOrgId = Model.EdOrgId,
                                                                                      fourDigitSchoolYear = Model.FourDigitSchoolYear,
                                                                                      isCurrentDistrict = false
                                                                                  }))"
                },
                columns: [
                    {
                        title: 'Student Name',
                        name: 'studentName',
                        width: '200px',
                        data: function(row, type, set) {
                            return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                        },
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'State Reporting Number',
                        name: 'studentID',
                        data: 'studentID'
                    },
                    {
                        title: 'Birthdate',
                        name: 'studentBirthDate',
                        data: 'studentBirthDate',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Grade',
                        name: 'pastGrade',
                        data: 'pastGrade'
                    },
                    {
                        title: 'Prior Entry Date',
                        name: 'pastEdOrgEnrollmentDate',
                        data: 'pastEdOrgEnrollmentDate',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Prior Exit Withdraw Date',
                        name: 'pastEdOrgExitDate',
                        data: 'pastEdOrgExitDate',
                        searchable: true,
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'New District',
                        name: 'currentDistrictName',
                        data: 'currentDistrictName',
                    },
                    {
                        title: 'New School',
                        name: 'currentSchoolName',
                        data: 'currentSchoolName',
                    },
                    {
                        title: 'New Entry Date',
                        name: 'currentEdOrgEnrollmentDate',
                        data: 'currentEdOrgEnrollmentDate',
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        title: 'Records Requested',
                        orderable: false,
                        data: 'null',
                        render: function(data, type, row) {
                            return '<button class="btn btn-sm prime-blue white-heavy-text" data-toggle="modal" data-target="#request-records-modal">Request Records</button>';
                        }
                    }
                ]
            });

            $(dataTable.table().header()).addClass('table-primary');

            $("input[name=date-filter]").change(function(e) {
                $('#reportsTable1').DataTable().ajax.reload();
                $('#reportsTable2').DataTable().ajax.reload();
            });
        });
    </script>
}