@model AdminIndexViewModel

<div class="row">
    <div class="col-2">
        <div class="list-group" id="admin-list-tab" role="tablist">
            <a class="list-group-item list-group-item-action active" id="list-error-threshold-list" data-toggle="list" href="#list-error-threshold" role="tab">Error Threshold</a>
            <a class="list-group-item list-group-item-action" id="list-submission-cycles-list" data-toggle="list" href="#list-submission-cycles" role="tab">Submission Cycles</a>
            <a class="list-group-item list-group-item-action" id="list-messages-list" data-toggle="list" href="#list-messages" role="tab" aria-controls="messages">Rule Management</a>
            <a class="list-group-item list-group-item-action" id="list-settings-list" data-toggle="list" href="#list-settings" role="tab" aria-controls="settings">Annoucements</a>
        </div>
    </div>
    <div class="col-10">
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show active" id="list-error-threshold" role="tabpanel" aria-labelledby="list-error-threshold-list">
                @Html.Partial("Partials/ErrorThresholds", Model.YearsOpenForDataSubmission)
            </div>
            <div class="tab-pane fade" id="list-submission-cycles" role="tabpanel" aria-labelledby="list-submission-cycles-list">
                <div class="row">
                    <div class="col-4">
                        <h4>Add Submission Cycles</h4>
                        <div class="form-group">
                            <label for="collection-list">Select Collection</label>
                            <select id="collection-list" class="form-control">
                                <option>Select a Collection</option>
                                @foreach (var collection in Model.RuleCollections)
                                {
                                    <option value="@collection.CollectionId">@collection.CollectionId</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-8" id="submission-rows"></div>
                </div>
            </div>
            <div class="tab-pane fade" id="list-messages" role="tabpanel" aria-labelledby="list-messages-list">...</div>
            <div class="tab-pane fade" id="list-settings" role="tabpanel" aria-labelledby="list-settings-list">...</div>
        </div>
    </div>
</div>

@*Modal Section*@
@Html.Partial("Partials/AddSchoolYearModal")


@section scripts {
    <script>

        /** All Error Threshold JS Functionality **/
        $("#error-threshold-warning-button").on("click", function() {
            $("#error-threshold-warning").hide();
        });

        var originalThreshold = "";
        $(document).ready(function () {
            $(".save-row").hide();
            $(".cancel-row").hide();
            $(".remove-row").hide();

            $(".edit-row").on("click", function (event) {
                event.preventDefault();
                var tblRow = $(this).closest('tr');

                tblRow.find('.save-row').show();
                tblRow.find('.cancel-row').show();
                tblRow.find('.remove-row').show();

                tblRow.find('.edit-row').hide();

                // Make the whole row editable
                tblRow.find('.row-data')
                    .attr('contenteditable', 'true')
                    //.addClass('bg-warning')
                    .css('padding', '3px')
                    .focus();

                // Save original threshold value just in case of canceled use
                originalThreshold = tblRow.find('.row-data')[0].innerText;
            });

            $(".cancel-row").on('click', function (event) {
                event.preventDefault();

                var tblRow = $(this).closest('tr');

                tblRow.find('.save-row').hide();
                tblRow.find('.cancel-row').hide();
                tblRow.find('.remove-row').hide();

                tblRow.find('.edit-row').show();

                // Make the whole row editable
                tblRow.find('.row-data')
                    .attr('contenteditable', 'false')
                    .removeClass('bg-warning')
                    .removeClass('bg-danger')
                    .css('padding', '');

                // If canceled we can put in the original data they started with.
                tblRow.find('.row-data')[0].innerText = originalThreshold;
            });

            $(".save-row").on('click', function (event) {
                event.preventDefault();
                var tblRow = $(this).closest('tr');

                // Clear all white space with regex
                var threshold = tblRow.find('.row-data')[0].innerText.replace(/\s/g, "");
                var id = tblRow[0].cells[0].innerText;

                // Validate and update the threshold
                if (isNaN(threshold)) {
                    $('#error-threshold-warning').show();
                }
                else {
                    // This is to make sure the threshold does not appear with extra white spaces.
                    tblRow.find('.row-data')[0].innerText = threshold;

                    var successValue = updateThreshold(id, threshold);

                    // Ajax returns a captial T true instead of boolean
                    if (successValue != "True") {
                        $("#error-threshold-warning").show();
                    }
                    // Otherwise return it back to original state.
                    else {
                        tblRow.find('.save-row').hide();
                        tblRow.find('.cancel-row').hide();
                        tblRow.find('.remove-row').hide();

                        tblRow.find('.edit-row').show();

                        tblRow.find('.row-data')
                            .attr('contenteditable', 'false')
                            .removeClass('bg-danger')
                            .removeClass('bg-warning')
                            .css('padding', '');
                    }
                }
            });

            // Setting the end year for them.
            $("#add-start-year").change(function () {
                $("#add-end-year").val(Number($("#add-start-year").val()) + 1);
            });
        });

        function updateThreshold(id, errorThreshold) {
            var value;
            $.ajax({
                url: '@(Url.Action("UpdateThresholdErrorValue", "Admin"))',
                async: true,
                data: { Id: id, thresholdValue: errorThreshold },
                success: function (result) {
                    value = result;
                }
            });
            return value;
        }

        function submitNewSchoolYears() {
            $("#submit-school-years-form").submit();
        }

        function removeSchoolYear(id, yearsRange) {
            if (confirm("Are you sure you want to delete " + yearsRange + "?")) {
                $.ajax({
                    url: '@(Url.Action("RemoveSchoolYear", "Admin"))',
                    async: false,
                    data: { Id: id },
                    success: function () {
                        location.reload();
                    }
                });
            }
        }
        /** End **/

        /** All Submission Row JS Functionality **/
        $("#collection-list").bind('change', function () {
            $.ajax({
                url: '@(Url.Action("GetSubmissionCyclesByCollectionId", "Admin"))',
                async: true,
                data: { collectionId: $("#collection-list").val() },
                success: function (data) {
                    $("#submission-rows").html(data);
                }
            });
        });

        // Inserting and removing rows for submission cycle.
        var rowNum = 0;
        function insertNewSubmissionCycleRow() {
            rowNum++;
            var row =
                '<div id="form-row-' + rowNum + '"' + 'class="form-row">'+
                    '<div class="col">' +
                    '<input type="text" class="form-control" placeholder="Start Date"/>' +
                    '</div>' +
                    '<div class="col">' +
                    '<input type="text" class="form-control" placeholder="End Date"/>'+
                    '</div>' +
                    '<button class="btn btn-sm danger-red" style="float: left; margin-top: 5px;" onclick="removeSubmissionCycleRow(' + rowNum +')">Remove</button>' +
                    '</div>';
            $('#submission-form-rows').append(row);
        }

        function removeSubmissionCycleRow(rowNumber) {
            $('#form-row-' + rowNumber).remove();
            rowNum--;
        }

        function removeSubmissionCycle(id, collectionId, cycleDates) {
            if (confirm("Are you sure you want to delete " + cycleDates + " for " + collectionId +"?")) {
                $.ajax({
                    url: '@(Url.Action("RemoveSubmissionCycle", "Admin"))',
                    async: true,
                    data: { id : id, collectionId : collectionId },
                    success: function (data) {
                        $("#submission-rows").html(data);
                    }
                });
            }
        }

        @*function addSubmissionCycle(ollectionId, startDate, endDate) {
            $.ajax({
                url: '@(Url.Action("AddSubmissionCycle", "Admin"))',
                async: true,
                data: { collectionId: collectionId, startDate: startDate, endDate : endDate  },
                success: function (data) {
                    $("#submission-rows").html(data);
                }
            });
        }*@
        /** End **/

    </script>
}