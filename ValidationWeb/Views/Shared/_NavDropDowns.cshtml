@using ValidationWeb.Filters
@using ValidationWeb.Utility
@model NavMenusViewModel
@{
    var identity = (ValidationPortalIdentity)User.Identity;
    var permissions = User.Identity.GetViewPermissions(identity.AppRole);
}

<div class="ml-auto justify-content-end">
    <li class="nav-item dropdown pull-right">       
        <i class="fas fa-user-circle white-heavy-text"></i> <span class="white-heavy-text">@Model.AppUserSession.UserIdentity.UserId</span>
    </li>
    @if (!permissions.CanAccessAdminFeatures)
    {
        <li class="nav-item navbar-text pull-right">
            @* TODO: put this displayed district name back for single-district users who don't get the dropdown *@
            @*<span id="selectedOrg" class="white-heavy-text">@Model.FocusedEdOrg.OrganizationName</span>*@
            @*todo: put this selectedOrg as the selected value *@
            @if (Model.EdOrgs.Count() > 1)
            {
                <select id="edOrgNames" class="form-control validation-dropdown-menu district-dropdown">
                </select>
            }
        </li>

        <li class="nav-item dropdown pull-right">
            <a class="nav-link dropdown-toggle validation-dropdown-toggle" href="#" id="actionDropdownYear" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @Model.FocusedSchoolYear
            </a>
            <div class="dropdown-menu validation-dropdown-menu" style="left: initial;">
                @foreach (var schoolYear in Model.SchoolYears)
                {
                    <a class="nav-item nav-link select-school-year-link" href="#" data-year-id="@(schoolYear.Id.ToString())">@(schoolYear.ToString())</a>
                }
            </div>
        </li>
    }
</div>
